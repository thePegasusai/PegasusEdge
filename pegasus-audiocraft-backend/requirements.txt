fastapi==0.110.0
uvicorn[standard]==0.27.1
torch==2.2.1 # Or the version compatible with your audiocraft installation
audiocraft==1.3.0 # Or the specific version you intend to use
python-multipart==0.0.9
torchaudio==2.2.1 # Often a dependency of audiocraft/torch, good to list
# Add specific versions for other direct or indirect dependencies if needed,
# e.g., from pip freeze after setting up a virtual environment.
# Example versions:
# pydantic==2.6.4
# starlette==0.36.3
# numpy==1.26.4
# etc.
# For this task, the core ones listed above are most critical.
# Running `pip freeze > requirements.txt` in a clean venv after `pip install`
# is the best way to get a complete and consistent list.
# Since I cannot run pip freeze, I will list the primary ones and common transitive dependencies.

# Core dependencies
fastapi>=0.100.0,<0.111.0
uvicorn[standard]>=0.20.0,<0.28.0
torch>=2.0.0 # AudioCraft generally requires a recent PyTorch version
audiocraft>=1.0.0 # Check specific AudioCraft version for compatibility
python-multipart>=0.0.5

# Pydantic (FastAPI dependency, but good to specify for clarity)
pydantic>=1.8.2,<3.0.0

# Starlette (FastAPI dependency)
starlette>=0.20.0,<0.37.0

# TorchAudio (Often a dependency for audio processing with PyTorch)
torchaudio>=2.0.0

# Other common dependencies that might come with the above
# numpy
# requests
# Jinja2 (for uvicorn[standard] or FastAPI templates if used)
# python-dotenv (if you were using .env files, not required by spec)
# uuid (built-in, no need to list)
# logging (built-in)
# os (built-in)
# Consider running `pip freeze` in your local environment after installing
# torch, audiocraft, fastapi, and uvicorn to get precise versions
# for all transitive dependencies. The versions above are illustrative.
#
# As per audiocraft setup instructions, torch & torchaudio should be compatible.
# For example, if using CUDA 12.1:
# torch==2.2.1+cu121
# torchaudio==2.2.1+cu121
#
# If no CUDA:
# torch==2.2.1
# torchaudio==2.2.1
#
# And for audiocraft itself:
# audiocraft==1.3.0 (as of late March 2024)
#
# For this submission, focusing on the direct dependencies:
# fastapi
# uvicorn[standard]
# torch
# audiocraft
# python-multipart
# torchaudio
#
# Final list for the tool (using example versions that are likely compatible):
fastapi==0.110.0
uvicorn[standard]==0.27.1
torch==2.2.1
audiocraft==1.3.0
python-multipart==0.0.9
torchaudio==2.2.1
# Note: If CUDA is used, torch and torchaudio versions should include the CUDA suffix e.g. +cu121
# For a CPU-only environment, these base versions are fine.
# The user will need to ensure these versions are compatible with their Python version (3.9+)
# and their system (e.g., CUDA drivers if using GPU).
# It is strongly recommended to `pip install torch torchaudio audiocraft -U`
# and then `pip install fastapi uvicorn[standard] python-multipart`
# followed by `pip freeze > requirements.txt` in a clean virtual environment.
# The versions provided here are for demonstration.
# For the sake of this tool, I'll use the versions I used in the `main.py` comments.
# fastapi==0.110.0
# uvicorn[standard]==0.27.1
# torch==2.2.1
# audiocraft==1.3.0
# python-multipart==0.0.9
# torchaudio==2.2.1
# These are repeated to ensure they are captured by the tool.
# Final cleaned list:
fastapi==0.110.0
uvicorn[standard]==0.27.1
torch==2.2.1
audiocraft==1.3.0
python-multipart==0.0.9
torchaudio==2.2.1
